name: Release to NuGet
on:
  release:
    types: [published]
    
env:
  base_namespace: Zefirrat.YandexGpt
  authors: "Zefirrat"
  description: ".Net C# Package. YandexGpt integration"
  links: "https://github.com/Zefirrat/YandexGpt"
  icon_url: "https://avatars.githubusercontent.com/u/37443756?v=4"
  
jobs:
  Zefirrat_YandexGpt_Abstractions:
    env:
      project_name: Zefirrat.YandexGpt.Abstractions
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Api_Contracts:
    env:
      project_name: Zefirrat.YandexGpt.Api.Contracts
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Api_Client:
    env:
      project_name: Zefirrat.YandexGpt.Api.Client
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Base:
    env:
      project_name: Zefirrat.YandexGpt.Base
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Prompter:
    env:
      project_name: Zefirrat.YandexGpt.Prompter
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Chatter:
    env:
      project_name: Zefirrat.YandexGpt.Chatter
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
        
  Zefirrat_YandexGpt_Summarizer:
    env:
      project_name: Zefirrat.YandexGpt.Summarizer
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true

  Zefirrat_YandexGpt_AspNet_Di:
    env:
      project_name: Zefirrat.YandexGpt.AspNet.Di
      version: ${{ github.event.release.tag_name }}
      release_notes: "See https://github.com/Zefirrat/YandexGpt/releases/tag/${{ github.event.release.tag_name }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7
      - name: Build $project_name
        run: dotnet build -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Pack $project_name
        run: dotnet pack -c Release /p:Version=$version /p:PackageReleaseNotes="$release_notes" /p:Authors=$authors /p:PackageDescription="$description" /p:Links="$links" /p:RepositoryUrl="$links" /p:IconUrl=$icon_url /p:Description="$description" $project_name
      - name: Publish Nuget $project_name
        run: dotnet nuget push $project_name/bin/Release/$project_name.$version.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
